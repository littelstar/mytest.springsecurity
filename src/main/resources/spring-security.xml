<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">
    <!--spring过滤器链的配置：
    需要拦截的资源；
    什么资源需要什么角色的权限
    定义认证方式：http-basic,formlogin'
    定义登录页面，定义登录请求地址，定义错误处理方式
    -->
    <security:http>
        <!--permitAll：允许所有人访问-->
        <!--isAnonymous():允许匿名用户访问，登录后就不能访问-->
        <security:intercept-url pattern="/index" access="permitAll()"/>
        <security:intercept-url pattern="/" access="permitAll()"/>
        <security:intercept-url pattern="/userlogin" access="permitAll()"/>
        <security:intercept-url pattern="/js/**" access="permitAll()"/>
        <security:intercept-url pattern="/imageCode" access="permitAll()"/>
        <!--配置路径对应的可以访问的用户角色-->
        <security:intercept-url pattern="/product/list" access="hasAuthority('ROLE_LIST')"/>
        <security:intercept-url pattern="/product/save" access="hasAuthority('ROLE_OPERATION')"/>
        <security:intercept-url pattern="/product/del" access="hasAuthority('ROLE_OPERATION')"/>
        <security:intercept-url pattern="/product/update" access="hasAuthority('ROLE_OPERATION')"/>
        <!--pattern:需要拦截的路径,/*代表以及路径，/**拦截所有
            access：isFullyAuthenticated：该资源需要认证才可以访问-->
        <security:intercept-url pattern="/**" access="isFullyAuthenticated()"/>
        <!--配置过滤器-->
        <security:custom-filter ref="imageCodeAuthenticationFilter" before="FORM_LOGIN_FILTER"/>

        <!--使用http-basic的方式进行认证-->
        <!--<security:http-basic/>-->
        <!--login-page:自定义登录页面
        login-processing-url:登录请求地址
        default-target-url:登录成功后跳转的页面-
        authentication-success-forward-url:登陆成功后跳转的页面
        authentication-failure-url：登陆失败跳转的页面-->
        <security:form-login login-page="/userlogin" authentication-success-handler-ref="myAuthentaionSuccessHandler"
        authentication-failure-handler-ref="myAuthenticaionFailureHandler"/>

        <security:remember-me token-repository-ref="jdbcTokenRepositoryImpl" token-validity-seconds="3600"/>
        <!--配置错误页面-->
        <security:access-denied-handler error-page="/error"/>
        <!--关闭CSRF机制-->
        <security:csrf disabled="true"/>

    </security:http>

    <!--认证管理器：
    认证信息（用户名、密码、当前用户的权限）
    -->
    <security:authentication-manager>
        <security:authentication-provider user-service-ref="myUserDetailService">
            <security:password-encoder ref="bCryptPasswordEncoder"/>
        </security:authentication-provider>
    </security:authentication-manager>
    <bean id="myUserDetailService" class="com.lpp.security.MyUserDetailService"/>
    <bean id="myAuthentaionSuccessHandler" class="com.lpp.security.MyAuthentaionSuccessHandler"/>
    <bean id="myAuthenticaionFailureHandler" class="com.lpp.security.MyAuthenticaionFailureHandler"/>
    <bean id="imageCodeAuthenticationFilter" class="com.lpp.security.ImageCodeAuthenticationFilter">
        <property name="authenticationFailureHandler" ref="myAuthenticaionFailureHandler"/>
    </bean>
    <bean id="jdbcTokenRepositoryImpl" class="org.springframework.security.web.authentication.rememberme.JdbcTokenRepositoryImpl">
        <property name="dataSource" ref="dataSource"/>
        <!--是否创建表,第二次启动时不需要了-->
        <!--<property name="createTableOnStartup" value="true"/>-->
    </bean>
    <bean id="bCryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
</beans>